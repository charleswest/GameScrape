Python 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 20:32:19) [MSC v.1500 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> 
======== RESTART: C:\Users\charles\Documents\GitHub\GameScrape\MainTestLoop.py ========

This program loads each image in the   directory
and looks for numbers on the screen.
 
enter q leave early
'

This program loads each image in the   directory
and reads the manifest to provide a score for the
evaluation
 
enter q to leave early

file>>>>>>>> pics\sc2_sample_game_screen.png  
cxcopy.shape (13, 390, 3)
17 contours found
find numbers exit
evalGame returns  [3, 6, 0, 1, 7, 2, 3]
 input     was    [3, 6, 0, 1, 7, 2, 3]
**** 1 correct out of 1   100.0 pct
file>>>>>>>> pics\sc_sample_terran_1087_267_67_94.png  
cxcopy.shape (13, 390, 3)
27 contours found
find numbers exit
evalGame returns  [1, 0, 8, 7, 2, 6, 7, 6, 7, 9, 4]
 input     was    [1, 0, 8, 7, 2, 6, 7, 6, 7, 9, 4]
**** 2 correct out of 2   100.0 pct
file>>>>>>>> pics\sc_sample_terran_114_112_22_38.png  
cxcopy.shape (13, 390, 3)
20 contours found
find numbers exit
evalGame returns  [1, 1, 4, 1, 1, 2, 2, 2, 3, 8]
 input     was    [1, 1, 4, 1, 1, 2, 2, 2, 3, 8]
**** 3 correct out of 3   100.0 pct
file>>>>>>>> pics\sc_sample_terran_1452_835_95_148.png  
cxcopy.shape (13, 390, 3)
26 contours found
find numbers exit
evalGame returns  [1, 4, 5, 2, 8, 3, 5, 9, 5, 1, 4, 8]
 input     was    [1, 4, 5, 2, 8, 3, 5, 9, 5, 1, 4, 8]
**** 4 correct out of 4   100.0 pct
file>>>>>>>> pics\sc_sample_terran_1475_3612_200_200.png  
cxcopy.shape (13, 390, 3)
28 contours found
find numbers exit
evalGame returns  [1, 4, 7, 5, 3, 6, 1, 2, 2, 0, 0, 2, 0, 0]
 input     was    [1, 4, 7, 5, 3, 6, 1, 2, 2, 0, 0, 2, 0, 0]
**** 5 correct out of 5   100.0 pct
file>>>>>>>> pics\sc_sample_terran_177_438_101_129.png  
cxcopy.shape (13, 390, 3)
26 contours found
find numbers exit
evalGame returns  [1, 7, 7, 4, 3, 8, 1, 0, 1, 1, 2, 9]
 input     was    [1, 7, 7, 4, 3, 8, 1, 0, 1, 1, 2, 9]
**** 6 correct out of 6   100.0 pct
file>>>>>>>> pics\sc_sample_terran_302_1312_168_188.png  
cxcopy.shape (13, 390, 3)
31 contours found
find numbers exit
evalGame returns  [3, 0, 2, 1, 3, 1, 2, 1, 6, 8, 1, 8, 8]
 input     was    [3, 0, 2, 1, 3, 1, 2, 1, 6, 8, 1, 8, 8]
**** 7 correct out of 7   100.0 pct
file>>>>>>>> pics\sc_sample_terran_324_260_42_54.png  
cxcopy.shape (13, 390, 3)
24 contours found
find numbers exit
evalGame returns  [3, 2, 4, 2, 6, 0, 4, 2, 5, 4]
 input     was    [3, 2, 4, 2, 6, 0, 4, 2, 5, 4]
**** 8 correct out of 8   100.0 pct
file>>>>>>>> pics\sc_sample_terran_69_148_27_38.png  
cxcopy.shape (13, 390, 3)
26 contours found
find numbers exit
evalGame returns  [6, 9, 1, 4, 8, 2, 7, 3, 8]
 input     was    [6, 9, 1, 4, 8, 2, 7, 3, 8]
**** 9 correct out of 9   100.0 pct
file>>>>>>>> pics\sc_sample_zerg_99_20_19_18_red.png  
cxcopy.shape (13, 390, 3)
12 contours found
find numbers exit
evalGame returns  [9, 9, 2, 0]
 input     was    [9, 9, 2, 0, 1, 9, 1, 8]
9 correct out of 10   90.0 pct
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 0  0 83 38 45 39 44  7  7  5 21 16]
[ 0  0 85 40 45 39 46  7  5  7 21 16]
[ 0  0 92 42 50 43 49  8  8  6 21 18]
[ 0  0 88 42 46 42 46  4  4  4 21 16]
[ 0  0 86 40 46 40 46  6  6  6 21 16]
[ 0  0 88 41 47 42 46  6  6  4 21 16]
[ 0  0 83 38 45 39 44  7  7  5 21 16]
[ 0  0 85 39 46 40 45  7  7  5 21 16]
[ 0  0 86 41 45 40 46  6  4  6 21 16]
[ 0  0 83 38 45 39 44  7  7  5 21 16]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 1  1 38  8 30 25 13 22 22 12 13  6]
[ 1  1 42  9 33 26 16 24 24 10 15  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 43  9 34 26 17 25 25  9 15  6]
[ 1  1 39  7 32 24 15 25 25  9 12  6]
[ 1  1 40  9 31 26 14 22 22 12 13  6]
[ 1  1 44 10 34 27 17 24 24 10 16  6]
[ 1  1 51  8 43 23 28 35 35  5 12  6]
[ 1  1 41  8 33 25 16 25 25  9 14  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 39  8 31 25 14 23 23 11 13  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 35  6 29 23 12 23 23 11 12  6]
[ 1  1 48 12 36 30 18 24 24 12 19 11]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 2  2 84 41 43 34 50 16  2 16 28 24]
[ 2  2 90 44 46 37 53 16  2 16 29 24]
[ 2  2 82 40 42 33 49 16  2 16 28 24]
[ 2  2 82 40 42 33 49 16  2 16 28 24]
[ 2  2 82 40 42 33 49 16  2 16 28 24]
[ 2  2 87 44 43 36 51 15  1 15 29 24]
[ 2  2 95 48 47 41 54 13  1 13 30 24]
[ 2  2 91 45 46 37 54 17  1 17 29 24]
[ 2  2 87 44 43 36 51 15  1 15 29 24]
[ 2  2 83 41 42 33 50 17  1 17 28 24]
[ 2  2 85 42 43 35 50 15  1 15 28 24]
[ 2  2 86 44 42 35 51 16  2 16 29 24]
[ 2  2 87 44 43 35 52 17  1 17 28 24]
[ 2  2 90 44 46 37 53 16  2 16 29 24]
[ 2  2 88 45 43 36 52 16  2 16 29 24]
[ 2  2 88 45 43 36 52 16  2 16 29 24]
[ 2  2 82 40 42 33 49 16  2 16 28 24]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 3  3 78 30 48 35 43 18 18  8 18 22]
[ 3  3 74 27 47 34 40 20 20  6 18 22]
[ 3  3 74 27 47 34 40 20 20  6 18 22]
[ 3  3 74 27 47 34 40 20 20  6 18 22]
[ 3  3 81 33 48 36 45 15 15  9 19 22]
[ 3  3 74 27 47 34 40 20 20  6 18 22]
[ 3  3 77 30 47 37 40 17 17  3 18 22]
[ 3  3 75 28 47 34 41 19 19  7 18 22]
[ 3  3 81 33 48 36 45 15 15  9 19 22]
[ 3  3 81 33 48 36 45 15 15  9 19 22]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 4  4 72 28 44 28 44 16 16 16 25 20]
[ 4  4 69 27 42 26 43 17 15 17 24 18]
[ 4  4 72 28 44 28 44 16 16 16 25 20]
[ 4  4 70 27 43 27 43 16 16 16 24 19]
[ 4  4 71 27 44 27 44 17 17 17 25 19]
[ 4  4 71 27 44 27 44 17 17 17 25 19]
[ 4  4 71 27 44 27 44 17 17 17 25 19]
[ 4  4 73 29 44 28 45 17 15 17 26 20]
[ 4  4 72 28 44 28 44 16 16 16 25 20]
[ 4  4 78 31 47 32 46 16 16 14 29 24]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 5  5 87 40 47 48 39  9  7  9 31 24]
[ 5  5 83 37 46 45 38  9  9  7 29 24]
[ 5  5 83 37 46 45 38  9  9  7 29 24]
[ 5  5 83 37 46 45 38  9  9  7 29 24]
[ 5  5 88 41 47 47 41  6  6  6 31 24]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 6  6 90 47 43 40 50 10  4 10 32 24]
[ 6  6 94 49 45 41 53 12  4 12 33 24]
[ 6  6 91 47 44 40 51 11  3 11 33 24]
[ 6  6 91 47 44 40 51 11  3 11 33 24]
[ 6  6 89 46 43 40 49  9  3  9 32 24]
[ 6  6 94 49 45 41 53 12  4 12 33 24]
[ 6  6 91 47 44 40 51 11  3 11 33 24]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 7  7 54 21 33 36 18 18 12 18 13 21]
[ 7  7 58 21 37 38 20 18 16 18 15 24]
[ 7  7 58 21 37 38 20 18 16 18 15 24]
[ 7  7 58 21 37 38 20 18 16 18 15 24]
[ 7  7 55 21 34 36 19 17 13 17 13 22]
[ 7  7 56 22 34 36 20 16 12 16 13 22]
[ 7  7 56 22 34 36 20 16 12 16 13 22]
[ 7  7 57 21 36 38 19 19 15 19 14 23]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 8  8 92 44 48 43 49  6  4  6 31 24]
[ 8  8 87 41 46 40 47  7  5  7 30 24]
[ 8  8 87 41 46 40 47  7  5  7 30 24]
[ 8  8 89 43 46 41 48  7  3  7 32 24]
[ 8  8 89 43 46 41 48  7  3  7 32 24]
[ 8  8 98 50 48 43 55 12  2 12 35 24]
[ 8  8 87 41 46 40 47  7  5  7 30 24]
[ 8  8 87 41 46 40 47  7  5  7 30 24]
[ 8  8 98 49 49 46 52  6  0  6 34 24]
[ 8  8 92 44 48 42 50  8  4  8 32 24]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
[ 9  9 93 42 51 40 53 13  9 13 37 24]
[ 9  9 88 38 50 38 50 12 12 12 35 24]
[ 9  9 87 37 50 37 50 13 13 13 34 24]
[ 9  9 94 43 51 40 54 14  8 14 37 24]
[ 9  9 86 36 50 36 50 14 14 14 34 24]
[ 9  9 86 36 50 36 50 14 14 14 34 24]
  lb n t0  L R  T  B  S  LR TB M3 Mv3 
100  percent correct 102 out of 102
problems are []
>>> 
